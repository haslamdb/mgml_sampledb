# Generated by Django 5.0.2 on 2025-04-01 03:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sampletracking', '0003_remove_aliquot_sample_type_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='aliquot',
            options={'verbose_name': 'Aliquot', 'verbose_name_plural': 'Aliquots'},
        ),
        migrations.AlterModelOptions(
            name='crudesample',
            options={'verbose_name': 'Crude Sample', 'verbose_name_plural': 'Crude Samples'},
        ),
        migrations.AlterModelOptions(
            name='extract',
            options={'verbose_name': 'Extract', 'verbose_name_plural': 'Extracts'},
        ),
        migrations.AlterModelOptions(
            name='sequencelibrary',
            options={'verbose_name': 'Sequence Library', 'verbose_name_plural': 'Sequence Libraries'},
        ),
        migrations.AddField(
            model_name='aliquot',
            name='concentration',
            field=models.FloatField(blank=True, help_text='Concentration of the aliquot', null=True),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='aliquot',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about this sample', null=True),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='volume',
            field=models.FloatField(blank=True, help_text='Volume of the aliquot in microliters', null=True),
        ),
        migrations.AddField(
            model_name='crudesample',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='crudesample',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='crudesample',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about this sample', null=True),
        ),
        migrations.AddField(
            model_name='crudesample',
            name='source_details',
            field=models.TextField(blank=True, help_text='Additional details about the sample source', null=True),
        ),
        migrations.AddField(
            model_name='crudesample',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='crudesample',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extract',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='extract',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='extract',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about this sample', null=True),
        ),
        migrations.AddField(
            model_name='extract',
            name='protocol_used',
            field=models.CharField(blank=True, help_text='Protocol used for extraction', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='extract',
            name='quality_score',
            field=models.FloatField(blank=True, help_text='Quality score for this extract (e.g., A260/A280)', null=True),
        ),
        migrations.AddField(
            model_name='extract',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='extract',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sequencelibrary',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='sequencelibrary',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sequencelibrary',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes about this sample', null=True),
        ),
        migrations.AddField(
            model_name='sequencelibrary',
            name='sequencing_platform',
            field=models.CharField(blank=True, help_text='Platform used for sequencing', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='sequencelibrary',
            name='sequencing_run_id',
            field=models.CharField(blank=True, help_text='Identifier for the sequencing run', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='sequencelibrary',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='sequencelibrary',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='aliquot',
            name='barcode',
            field=models.CharField(help_text='Unique identifier for this sample', max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9_-]+$', 'Barcode can only contain alphanumeric characters, underscores, and hyphens.')]),
        ),
        migrations.AlterField(
            model_name='aliquot',
            name='box_ID',
            field=models.CharField(help_text='Identifier for the box where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='aliquot',
            name='date_created',
            field=models.DateField(help_text='Date when the sample was created'),
        ),
        migrations.AlterField(
            model_name='aliquot',
            name='freezer_ID',
            field=models.CharField(help_text='Identifier for the freezer where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='aliquot',
            name='parent_barcode',
            field=models.ForeignKey(blank=True, help_text='The crude sample this aliquot was derived from', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aliquots', to='sampletracking.crudesample', to_field='barcode'),
        ),
        migrations.AlterField(
            model_name='aliquot',
            name='shelf_ID',
            field=models.CharField(help_text='Identifier for the shelf where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='crudesample',
            name='barcode',
            field=models.CharField(help_text='Unique identifier for this sample', max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9_-]+$', 'Barcode can only contain alphanumeric characters, underscores, and hyphens.')]),
        ),
        migrations.AlterField(
            model_name='crudesample',
            name='box_ID',
            field=models.CharField(help_text='Identifier for the box where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='crudesample',
            name='collection_date',
            field=models.DateField(help_text='Date when the sample was collected'),
        ),
        migrations.AlterField(
            model_name='crudesample',
            name='date_created',
            field=models.DateField(help_text='Date when the sample was created'),
        ),
        migrations.AlterField(
            model_name='crudesample',
            name='freezer_ID',
            field=models.CharField(help_text='Identifier for the freezer where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='crudesample',
            name='sample_source',
            field=models.CharField(choices=[('Stool', 'Stool'), ('Nasal', 'Nasal Swab'), ('Skin', 'Skin Swab'), ('Oral', 'Oral Swab'), ('Blood', 'Blood'), ('Tissue', 'Tissue'), ('Other', 'Other')], default='', help_text='Source of the sample', max_length=100),
        ),
        migrations.AlterField(
            model_name='crudesample',
            name='shelf_ID',
            field=models.CharField(help_text='Identifier for the shelf where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='crudesample',
            name='your_id',
            field=models.CharField(help_text='Identifier provided by the submitter', max_length=50),
        ),
        migrations.AlterField(
            model_name='extract',
            name='barcode',
            field=models.CharField(help_text='Unique identifier for this sample', max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9_-]+$', 'Barcode can only contain alphanumeric characters, underscores, and hyphens.')]),
        ),
        migrations.AlterField(
            model_name='extract',
            name='box_ID',
            field=models.CharField(help_text='Identifier for the box where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='extract',
            name='date_created',
            field=models.DateField(help_text='Date when the sample was created'),
        ),
        migrations.AlterField(
            model_name='extract',
            name='extract_type',
            field=models.CharField(choices=[('DNA', 'DNA'), ('RNA', 'RNA'), ('cfDNA', 'cfDNA'), ('Protein', 'Protein'), ('Other', 'Other')], default='DNA', help_text='Type of extract', max_length=100),
        ),
        migrations.AlterField(
            model_name='extract',
            name='freezer_ID',
            field=models.CharField(help_text='Identifier for the freezer where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='extract',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='The aliquot this extract was derived from', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extracts', to='sampletracking.aliquot', to_field='barcode'),
        ),
        migrations.AlterField(
            model_name='extract',
            name='shelf_ID',
            field=models.CharField(help_text='Identifier for the shelf where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='barcode',
            field=models.CharField(help_text='Unique identifier for this sample', max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9_-]+$', 'Barcode can only contain alphanumeric characters, underscores, and hyphens.')]),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='box_ID',
            field=models.CharField(help_text='Identifier for the box where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='clean_library_conc',
            field=models.FloatField(blank=True, help_text='Clean library concentration in ng/µL', null=True),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='date_created',
            field=models.DateField(help_text='Date when the sample was created'),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='date_sequenced',
            field=models.DateField(blank=True, help_text='Date when the library was sequenced', null=True),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='diluted_qubit_conc',
            field=models.FloatField(blank=True, help_text='Diluted Qubit concentration in ng/µL', null=True),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='freezer_ID',
            field=models.CharField(help_text='Identifier for the freezer where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='library_type',
            field=models.CharField(choices=[('Nextera', 'Nextera'), ('SMARTer', 'SMARTer'), ('QIA_COVID', 'QIA_COVID'), ('TruSeq', 'TruSeq'), ('Other', 'Other')], default='DNA', help_text='Type of sequencing library', max_length=100),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='nindex',
            field=models.CharField(choices=[('N701', 'N701'), ('N702', 'N702'), ('N703', 'N703'), ('N704', 'N704'), ('N705', 'N705'), ('N706', 'N706'), ('N707', 'N707'), ('N710', 'N710'), ('N711', 'N711'), ('N712', 'N712'), ('N714', 'N714'), ('N715', 'N715'), ('N716', 'N716'), ('N718', 'N718'), ('N719', 'N719'), ('N720', 'N720'), ('N721', 'N721'), ('N722', 'N722'), ('N723', 'N723'), ('N724', 'N724'), ('N726', 'N726'), ('N727', 'N727'), ('N728', 'N728'), ('N729', 'N729')], default='', help_text='N-index used for this library', max_length=100),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='The extract this library was derived from', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='libraries', to='sampletracking.extract'),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='qubit_conc',
            field=models.FloatField(blank=True, help_text='Qubit concentration in ng/µL', null=True),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='shelf_ID',
            field=models.CharField(help_text='Identifier for the shelf where this sample is stored', max_length=100),
        ),
        migrations.AlterField(
            model_name='sequencelibrary',
            name='sindex',
            field=models.CharField(choices=[('S510', 'S510'), ('S502', 'S502'), ('S505', 'S505'), ('S506', 'S506'), ('S507', 'S507'), ('S510', 'S510'), ('S503', 'S503'), ('S511', 'S511'), ('S508', 'S508'), ('S516', 'S516'), ('S517', 'S517'), ('S518', 'S518'), ('S521', 'S521'), ('S515', 'S515'), ('S522', 'S522'), ('S520', 'S520'), ('S513', 'S513')], default='', help_text='S-index used for this library', max_length=100),
        ),
        migrations.AddIndex(
            model_name='aliquot',
            index=models.Index(fields=['barcode'], name='sampletrack_barcode_89bb05_idx'),
        ),
        migrations.AddIndex(
            model_name='crudesample',
            index=models.Index(fields=['barcode'], name='sampletrack_barcode_4ea581_idx'),
        ),
        migrations.AddIndex(
            model_name='crudesample',
            index=models.Index(fields=['your_id'], name='sampletrack_your_id_2965c3_idx'),
        ),
        migrations.AddIndex(
            model_name='crudesample',
            index=models.Index(fields=['collection_date'], name='sampletrack_collect_7fe8db_idx'),
        ),
        migrations.AddIndex(
            model_name='extract',
            index=models.Index(fields=['barcode'], name='sampletrack_barcode_ba8d9a_idx'),
        ),
        migrations.AddIndex(
            model_name='extract',
            index=models.Index(fields=['extract_type'], name='sampletrack_extract_d8a31d_idx'),
        ),
        migrations.AddIndex(
            model_name='sequencelibrary',
            index=models.Index(fields=['barcode'], name='sampletrack_barcode_1091e7_idx'),
        ),
        migrations.AddIndex(
            model_name='sequencelibrary',
            index=models.Index(fields=['library_type'], name='sampletrack_library_022303_idx'),
        ),
        migrations.AddIndex(
            model_name='sequencelibrary',
            index=models.Index(fields=['date_sequenced'], name='sampletrack_date_se_61a7bc_idx'),
        ),
    ]
